source ~/.git-prompt.sh

# Set colors
bold=$(tput bold);
reset=$(tput sgr0);
black=$(tput setaf 0);
red=$(tput setaf 1);
green=$(tput setaf 2);
yellow=$(tput setaf 3);
blue=$(tput setaf 4);
magenta=$(tput setaf 5);
cyan=$(tput setaf 6);
white=$(tput setaf 7);

# Set icons
git_ico=$'\uf418';
dir_ico=$'\uf4d3';
check_ico=$'\u2714';
cross_ico=$'\u2717';

# Display status of the last command that ran
# Make sure to call this command with \$() instead of $()
# so it is evaluated every time a new prompt is generated
function prev_status() {
    if [ $? -eq 0 ]; then
         echo -e "${green}${check_ico}${reset}";
    else
         echo -e "${red}${cross_ico}${reset}";
    fi
}

function git_prompt() {
  # Check if the current directory is in a Git repository.
	git rev-parse --is-inside-work-tree &>/dev/null || return;

  echo -e "${git_ico}$(__git_ps1)";
}

# Set terminal prompt
PS1=''
PS1+="\$(prev_status) "; # status of prev command
PS1+="${cyan}\u@\h${reset} "; # username@hostname
PS1+="${yellow}${dir_ico} \w${reset} "; # working directory
PS1+="${magenta}\$(git_prompt)${reset}"; # git status
PS1+="\n$ "; # user command
export PS1;
